<!DOCTYPE html>
<html lang="en">

  <head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="preconnect" href="https://fonts.gstatic.com">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300&display=swap" rel="stylesheet">
    <script src="http://localhost:3000/socket.io/socket.io.js"></script>
    <title>Projeto WebChat</title>
    <style>
      /* .body {
        background-color: rgb(61, 26, 26);
        font-family: 'Poppins', sans-serif;
      }

      .title {
        color: white;
        font-size: 25pt;
        text-align: center;
      }

      .div-changeNickname-listUsers {
        align-items: center;
        border-bottom: 2px solid white;
        display: flex;
        flex-flow: row wrap;
        justify-content: center;
        margin: auto;
      }

      .div-changeNickname {
        align-items: center;
        display: flex;
        flex-flow: column wrap;
        justify-content: center;
        margin: auto;
        width: 50%;
      }

      .nickname {
        border: 2px solid black;
        border-radius: 10px 0px;
        font-family: 'Poppins', sans-serif;
        font-size: 12pt;
        height: 25px;
        margin: 5px auto;
        text-align: center;
        width: 250px;
      }

      .nickname:focus {
        border: 5px solid black;
        outline: none !important;
      }

      .bttnNickname {
        background-color: black;
        border: none;
        border-radius: 10px 0px;
        color: white;
        font-family: 'Poppins', sans-serif;
        font-size: 12pt;
        font-weight: 900;
        height: 35px;
        margin: 5px auto;
        width: 250px;
      }

      .bttnNickname:hover {
        background-color: #383838;
        cursor: pointer;
      }

      .div-listUsers {
        align-items: center;
        display: flex;
        flex-flow: row wrap;
        justify-content: center;
        margin: auto;
        width: 50%;
      }

      .listUsers {
        align-items: center;
        display: flex;
        flex-flow: row wrap;
        height: 100px;
        justify-content: center;
        list-style-type: none;
        margin: auto;
      }

      .listUsers li {
        background-color: white;
        border-radius: 10px 0px;
        color: black;
        font-family: 'Poppins', sans-serif;
        font-size: 12pt;
        font-weight: 900;
        list-style-type: none;
        margin: 5px;
        padding: 5px 10px;
      }

      .div-chatMessages {
        align-items: center;
        display: flex;
        flex-flow: row wrap;
        justify-content: center;
        margin: auto;
        margin-bottom: 100px;
      }

      .p-message {
        color: white;
        font-family: 'Poppins', sans-serif;
        font-size: 16pt;
        font-weight: 900;
        text-align: center;
      }

      .chatMessages {
        list-style-type: none;
      }

      .chatMessages li {
        background-color: white;
        border-radius: 10px 0px;
        color: black;
        font-family: 'Poppins', sans-serif;
        font-size: 12pt;
        font-weight: 900;
        list-style-type: none;
        margin: 5px;
        padding: 5px 10px;
      }

      .div-message {
        align-items: center;
        background-color: rgb(61, 26, 26);
        border-top: 2px solid white;
        bottom: 0px;
        display: flex;
        flex-flow: row nowrap;
        justify-content: center;
        margin: auto;
        position: fixed;
        width: 100%;
      }

      .message {
        border: 2px solid white;
        border-radius: 10px 0px;
        font-family: 'Poppins', sans-serif;
        font-size: 12pt;
        height: 25px;
        margin: 10px 5px;
        width: 70%;
      }

      .message:focus {
        border: 3px solid black;
        outline: none !important;
      }

      .bttnMessage {
        background-color: black;
        border: none;
        border-radius: 10px 0px;
        color: white;
        font-family: 'Poppins', sans-serif;
        font-size: 14pt;
        font-weight: 900;
        height: 35px;
        width: 150px;
      }

      .bttnMessage:hover {
        background-color: #383838;
        cursor: pointer;
      }*/

    </style>
  </head>
  <body class="body">
    <h1 class="title">WebChat Trybe</h1>

    <div class="div-changeNickname-listUsers">
      <div class="div-changeNickname">
        <input
          type="text"
          id="nickname"
          class="nickname"
          data-testid="nickname-box"
          placeholder="Digite o novo nickname"
        />
        <button
          id="bttnNickname"
          class="bttnNickname"
          data-testid="nickname-button"
        >
          Salvar
        </button>
      </div>
      <p>Usuários Online</p>
      <div class="div-listUsers">
        <ul
          id="listUsers"
          class="listUsers"
        >
        <% users.forEach(({ nickname }) => { %>
          <li data-testid="online-user"><%= nickname %></li>
        <% }) %>
        </ul>
      </div>
    </div>

    <p class="p-message">Mensagens</p>

    <div class="div-chatMessages">
      <ul 
        id="chatMessages"
        class="chatMessages"
      >
        <% messages.forEach(({ timestamp, nickname, message }) => { %>
          <li data-testid="message"><%= timestamp %> - <%= nickname %>: <%= message %></li>
        <% }) %>
      </ul>
    </div>

    <div class="div-message">
      <input
        type="text"
        id="message"
        class="message"
        data-testid="message-box"
        placeholder="Digite uma mensagem"
      />
      <button
        id="bttnMessage"
        class="bttnMessage"
        data-testid="send-button"
      >
        Enviar
      </button>
    </div> 

    <script>
      const socket = io();
      const generateNickname = `${Math.random().toString().substr(2, 16)}`; // https://stackoverflow.com/questions/1349404/generate-random-string-characters-in-javascript

      // Salva os dados na sessionStorage - sessionStorage.setItem('chave', valor) - https://developer.mozilla.org/pt-BR/docs/Web/API/Window/sessionStorage
      sessionStorage.setItem('nick', generateNickname);

      socket.on('connect', () => {
        socket.emit('connectedUsers', ({ id: socket.id, nickname: generateNickname }));
      });

      socket.on('connectedUsers', (usersList) => {
        document.querySelector('#listUsers').innerHTML="";
        const userFirst = usersList.find((user) => user.id === socket.id);
        const otherUsers = usersList.filter((user) => user.id !== socket.id);
        // https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Array/unshift
        otherUsers.unshift(userFirst);
        otherUsers.forEach((user) => {
          const users = document.createElement('li');
          users.setAttribute('data-testid', 'online-user');
          users.setAttribute('id', user.id);
          users.innerHTML = user.nickname;
          document.querySelector('#listUsers').appendChild(users);
        });
      });

      document.querySelector('#bttnNickname').addEventListener('click', (e) =>{
        const inputNickname = document.querySelector('#nickname').value;
        sessionStorage.setItem('nick', inputNickname);
        const idSocket = `#${socket.id}`;
        const id = document.querySelector(idSocket);
        id.innerHTML = inputNickname;
        socket.emit('changeNickname', { id: socket.id, nickname: inputNickname });
      });

      socket.on('changeNickname', (usersList) => {
        const user = usersList.find((user) => user.id === socket.id);
        const idSocket = `#${socket.id}`;
        const id = document.querySelector(idSocket);
        id.innerHTML = user.nickname;
      });

      document.querySelector('#bttnMessage').addEventListener('click', (e) => {
        const chatMessage = document.querySelector('#message').value;
        // Obtém os dados da sessionStorage sessionStorage.getItem('chave') - https://developer.mozilla.org/pt-BR/docs/Web/API/Window/sessionStorage
        const nickname = sessionStorage.getItem('nick');
        socket.emit('message',{ chatMessage, nickname });
      });

      socket.on('message', (message) => {
        const listMessage = document.createElement('li');
        listMessage.innerHTML = message;
        listMessage.setAttribute('data-testid', 'message');
        document.querySelector('#chatMessages').appendChild(listMessage);
      });

    </script>

  </body>

</html>
