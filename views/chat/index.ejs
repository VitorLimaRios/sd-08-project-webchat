<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Web chat</title>
</head>
<body>
  <p class='username' data-testid="online-user">
    <%= name %> 
  </p>
  <div class="left-content">
    <input type="text" class="nickname" data-testid="nickname-box">
    <button class="btn-save-nick" data-testid="nickname-button">save</button>
    <ul class="userlist"></ul>
  </div>
  <div class="right-content">
    <ul class="web-chat">
      <% messages.map(({nickname, chatMessage, timestamp}) => { %>
        <li data-testid="message">
          <%= `${timestamp} ${nickname}: ${chatMessage}` %>
        </li>
      <% }) %>
    </ul>
  </div>
  <input class="write-message" data-testid="message-box" ></input>
  <button class="send-message-btn" data-testid="send-button" >Enviar</button>
</body>

<script src="/socket.io/socket.io.js"></script>
<script>
  const socket = io()

  const inputMessage = document.querySelector('.write-message');
  const btnSendMessage = document.querySelector('.send-message-btn');
  const nicknameInput = document.querySelector('.nickname');
  const userName = document.querySelector('.username')
  const btnSetUsername = document.querySelector('.btn-save-nick')

  const sendMember = () => {
    const nickname = userName.innerText

    const userData = {
      nickname,
    }

    socket.emit('userConnected', userData)
  }

  sendMember();

  const sendMessage = () => {
    const nickname = userName.innerText
    const chatMessage = inputMessage.value;

    socket.emit('message', { nickname, chatMessage })
  }

  const setUserName = () => {
    console.log(`${userName.innerText} mudou o nome para ${nicknameInput.value}`)
    
    userName.innerText = nicknameInput.value;

    nicknameInput.value = ''

    sendMember();
  }

  btnSendMessage.addEventListener('click', sendMessage);
  btnSetUsername.addEventListener('click', setUserName);

  socket.on('message', (message) => {
    const ulChat = document.querySelector('.web-chat');
    
    const li = document.createElement('li')

    li.innerText = message;
    li.setAttribute('data-testid', 'message')
    
    ulChat.appendChild(li);
    
    inputMessage.value = ''
  })

  socket.on('userList', (userList) => {
    console.log(userList)
    const listOfUsers = document.querySelector('.userlist')
    listOfUsers.innerHTML = '';
    
    const nickname = userName.innerText
    const thisUser = userList.find(elem => elem.nickname === nickname)
    const everyBodyElse = userList.filter(elem => elem.nickname !== nickname)

    const me = document.createElement('li')
    me.innerText = thisUser.nickname;
    me.setAttribute('data-testid', 'online-user')

    listOfUsers.appendChild(me);

    everyBodyElse.forEach(user => {

      const li = document.createElement('li');
      li.innerText = user.nickname;
      li.setAttribute('data-testid', 'online-user')

      listOfUsers.appendChild(li)
    })
  })

  window.onbeforeunload = (_event) => {
    socket.disconnect();
  };

</script>
</html>